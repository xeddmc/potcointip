values:
    username:
        regex: '(@[\w-]{3,20})'
    amount:
        regex: '([0-9]{1,9}(?:\.[0-9]{0,16})?)'
    keywords:
        regex: '(all|flip|megaflip|gigaflip|roll|megaroll|gigaroll|sushi|random01|random05|random1|random3|random5|random10|random15|random25|random50|random100|random250|random500|random1000|upvote|pi|e|leet|quarter|half|cookie|nothing|gum|beer|nicebeer|hug|kiss|nyan|highfive|fart|coffee)'
    tip_init:
        regex: '(/u/mybotuser|mybotuser)'

actions:
    givetip:
        enabled: true
        public: true
        simple: false
        regex:
            a:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_AMOUNT}(\s+){REGEX_COIN}'
                rg_amount: 4
                rg_keyword: 0
                rg_address: 0
                rg_to_user: 0
                rg_coin: 6
                rg_fiat: 0
            aa:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_KEYWORD}(\s+){REGEX_COIN}'
                rg_amount: 0
                rg_keyword: 4
                rg_address: 0
                rg_to_user: 0
                rg_coin: 6
                rg_fiat: 0
            b:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_ADDRESS}(\s+){REGEX_AMOUNT}(\s+){REGEX_COIN}'
                rg_amount: 6
                rg_keyword: 0
                rg_address: 4
                rg_to_user: 0
                rg_coin: 8
                rg_fiat: 0
            bb:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_ADDRESS}(\s+){REGEX_KEYWORD}(\s+){REGEX_COIN}'
                rg_amount: 0
                rg_keyword: 6
                rg_address: 4
                rg_to_user: 0
                rg_coin: 8
                rg_fiat: 0
            bbb:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_ADDRESS}(\s+){REGEX_COIN}{REGEX_AMOUNT}'
                rg_amount: 7
                rg_keyword: 0
                rg_address: 4
                rg_to_user: 0
                rg_coin: 6
                rg_fiat: 0
            bbbb:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_ADDRESS}(\s+){REGEX_COIN}{REGEX_KEYWORD}'
                rg_amount: 0
                rg_keyword: 7
                rg_address: 4
                rg_to_user: 0
                rg_coin: 6
                rg_fiat: 0
            c:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_USER}(\s+){REGEX_AMOUNT}(\s+){REGEX_COIN}'
                rg_amount: 6
                rg_keyword: 0
                rg_address: 0
                rg_to_user: 4
                rg_coin: 8
                rg_fiat: 0
            cc:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_USER}(\s+){REGEX_KEYWORD}(\s+){REGEX_COIN}'
                rg_amount: 0
                rg_keyword: 6
                rg_address: 0
                rg_to_user: 4
                rg_coin: 8
                rg_fiat: 0
            ccc:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_USER}(\s+){REGEX_COIN}{REGEX_AMOUNT}'
                rg_amount: 7
                rg_keyword: 0
                rg_address: 0
                rg_to_user: 4
                rg_coin: 6
                rg_fiat: 0
            cccc:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_USER}(\s+){REGEX_COIN}{REGEX_KEYWORD}'
                rg_amount: 0
                rg_keyword: 7
                rg_address: 0
                rg_to_user: 4
                rg_coin: 6
                rg_fiat: 0
            d:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_FIAT}{REGEX_AMOUNT}(\s+){REGEX_COIN}'
                rg_amount: 5
                rg_keyword: 0
                rg_address: 0
                rg_to_user: 0
                rg_coin: 7
                rg_fiat: 4
            dd:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_FIAT}{REGEX_KEYWORD}(\s+){REGEX_COIN}'
                rg_amount: 0
                rg_keyword: 5
                rg_address: 0
                rg_to_user: 0
                rg_coin: 7
                rg_fiat: 4
            e:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_ADDRESS}(\s+){REGEX_FIAT}{REGEX_AMOUNT}(\s+){REGEX_COIN}'
                rg_amount: 7
                rg_keyword: 0
                rg_address: 4
                rg_to_user: 0
                rg_coin: 9
                rg_fiat: 6
            ee:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_ADDRESS}(\s+){REGEX_FIAT}{REGEX_KEYWORD}(\s+){REGEX_COIN}'
                rg_amount: 0
                rg_keyword: 7
                rg_address: 4
                rg_to_user: 0
                rg_coin: 9
                rg_fiat: 6
            f:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_USER}(\s+){REGEX_FIAT}{REGEX_AMOUNT}(\s+){REGEX_COIN}'
                rg_amount: 7
                rg_keyword: 0
                rg_address: 0
                rg_to_user: 4
                rg_coin: 9
                rg_fiat: 6
            ff:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_USER}(\s+){REGEX_FIAT}{REGEX_KEYWORD}(\s+){REGEX_COIN}'
                rg_amount: 0
                rg_keyword: 7
                rg_address: 0
                rg_to_user: 4
                rg_coin: 9
                rg_fiat: 6
            g:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_COIN}{REGEX_AMOUNT}'
                rg_amount: 5
                rg_keyword: 0
                rg_address: 0
                rg_to_user: 0
                rg_coin: 4
                rg_fiat: 0
            gg:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_COIN}{REGEX_KEYWORD}'
                rg_amount: 0
                rg_keyword: 5
                rg_address: 0
                rg_to_user: 0
                rg_coin: 4
                rg_fiat: 0
            ggg:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_FIAT}{REGEX_AMOUNT}'
                rg_amount: 5
                rg_keyword: 0
                rg_address: 0
                rg_to_user: 0
                rg_coin: 0
                rg_fiat: 4
            gggg:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_FIAT}{REGEX_KEYWORD}'
                rg_amount: 0
                rg_keyword: 5
                rg_address: 0
                rg_to_user: 0
                rg_coin: 0
                rg_fiat: 4
            ggggg:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_KEYWORD}'
                rg_amount: 0
                rg_keyword: 4
                rg_address: 0
                rg_to_user: 0
                rg_coin: 0
                rg_fiat: 0
            h:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_USER}(\s+){REGEX_FIAT}{REGEX_AMOUNT}'
                rg_amount: 7
                rg_keyword: 0
                rg_address: 0
                rg_to_user: 4
                rg_coin: 0
                rg_fiat: 6
            hh:
                value: '(\+){REGEX_TIP_INIT}(\s+){REGEX_USER}(\s+){REGEX_FIAT}{REGEX_KEYWORD}'
                rg_amount: 0
                rg_keyword: 7
                rg_address: 0
                rg_to_user: 4
                rg_coin: 0
                rg_fiat: 6
    info:
        enabled: true
        public: false
        simple: true
        regex: '(\+)(info|balance)'
    register:
        enabled: true
        public: false
        simple: true
        regex: '(\+)(register)'
    accept:
        enabled: true
        public: false
        simple: true
        regex: '(\+)(accept)'
    decline:
        enabled: true
        public: false
        simple: true
        regex: '(\+)(decline)'
    withdraw:
        enabled: true
        public: false
        simple: false
        regex:
            a:
                value: '(\+)(withdraw)(\s+){REGEX_ADDRESS}(\s+){REGEX_AMOUNT}(\s+){REGEX_COIN}'
                rg_amount: 6
                rg_keyword: 0
                rg_address: 4
                rg_to_user: 0
                rg_coin: 8
                rg_fiat: 0
            aa:
                value: '(\+)(withdraw)(\s+){REGEX_ADDRESS}(\s+){REGEX_KEYWORD}(\s+){REGEX_COIN}'
                rg_amount: 0
                rg_keyword: 6
                rg_address: 4
                rg_to_user: 0
                rg_coin: 8
                rg_fiat: 0
            aaa:
                value: '(\+)(withdraw)(\s+){REGEX_ADDRESS}(\s+){REGEX_COIN}{REGEX_AMOUNT}'
                rg_amount: 7
                rg_keyword: 0
                rg_address: 4
                rg_to_user: 0
                rg_coin: 6
                rg_fiat: 0
            aaaa:
                value: '(\+)(withdraw)(\s+){REGEX_ADDRESS}(\s+){REGEX_COIN}{REGEX_KEYWORD}'
                rg_amount: 0
                rg_keyword: 7
                rg_address: 4
                rg_to_user: 0
                rg_coin: 6
                rg_fiat: 0
            b:
                value: '(\+)(withdraw)(\s+){REGEX_ADDRESS}(\s+){REGEX_FIAT}{REGEX_AMOUNT}(\s+){REGEX_COIN}'
                rg_amount: 7
                rg_keyword: 0
                rg_address: 4
                rg_to_user: 0
                rg_coin: 9
                rg_fiat: 6
            bb:
                value: '(\+)(withdraw)(\s+){REGEX_ADDRESS}(\s+){REGEX_FIAT}{REGEX_KEYWORD}(\s+){REGEX_COIN}'
                rg_amount: 0
                rg_keyword: 7
                rg_address: 4
                rg_to_user: 0
                rg_coin: 9
                rg_fiat: 6
    history:
        enabled: true
        public: false
        simple: true
        regex: '(\+)(history)'
    redeem:
        enabled: false
        public: false
        simple: false
        regex:
            a:
                value: '(\+)(redeem)(\s+){REGEX_COIN}'
                rg_amount: 0
                rg_keyword: 0
                rg_address: 0
                rg_to_user: 0
                rg_coin: 4
                rg_fiat: 0
    rates:
        enabled: true
        public: false
        simple: true
        regex: '(\+)(rates)'

keywords:
    all:
        value: "float( self.u_from.get_balance(coin=self.coin, kind=('withdraw' if bool(self.addr_to) else 'givetip')) - (self.ctb.conf.coins[self.coin].txfee if bool(self.addr_to) else 0.0) ) if self.u_from.is_registered() and bool(self.coin) else None"
        for_fiat: false
        for_coin: true
        message: '^**(*・_・)ノ⌒*** {USER_FROM} ^gives {USER_TO} ^_everything_!.. ^all {AMOUNT} ^now ^belong ^to {USER_TO}'
    flip:
        value: "float( (self.ctb.conf.coins[self.coin].txmin.givetip if bool(self.coin) else 0.01) * float(randint(1,2)) )"
        for_fiat: true
        for_coin: true
        message: '{USER_FROM} ^flips ^the ^table ^**(╯°□°）╯︵┻━┻** ^and {USER_TO} ^gets {AMOUNT}'
    megaflip:
        value: "float( (self.ctb.conf.coins[self.coin].txmin.givetip if bool(self.coin) else 0.01) * float(randint(1,20)) )"
        for_fiat: true
        for_coin: true
        message: '{USER_FROM} ^flips ^10 ^tables ^**(╯°□°）╯︵┻━┻** ^and {USER_TO} ^gets {AMOUNT}'
    gigaflip:
        value: "float( (self.ctb.conf.coins[self.coin].txmin.givetip if bool(self.coin) else 0.01) * float(randint(1,200)) )"
        for_fiat: true
        for_coin: true
        message: '{USER_FROM} ^flips ^100 ^tables ^**(╯°□°）╯︵┻━┻** ^and {USER_TO} ^gets {AMOUNT}'
    roll:
        value: "float( (self.ctb.conf.coins[self.coin].txmin.givetip if bool(self.coin) else 0.01) * float(randint(1,6)) )"
        for_fiat: true
        for_coin: true
        message: '{USER_FROM} ^rolls ^a ^die, ^and {USER_TO} ^gets {AMOUNT}'
    megaroll:
        value: "float( (self.ctb.conf.coins[self.coin].txmin.givetip if bool(self.coin) else 0.01) * float(randint(1,60)) )"
        for_fiat: true
        for_coin: true
        message: '{USER_FROM} ^rolls ^a ^mega-die, ^and {USER_TO} ^gets {AMOUNT}'
    gigaroll:
        value: "float( (self.ctb.conf.coins[self.coin].txmin.givetip if bool(self.coin) else 0.01) * float(randint(1,600)) )"
        for_fiat: true
        for_coin: true
        message: '{USER_FROM} ^rolls ^a ^giga-die, ^and {USER_TO} ^gets {AMOUNT}'
    sushiroll:
        value: 3.0
        for_fiat: true
        for_coin: false
        message: '{USER_FROM} ^serves {USER_TO} ^a ^roll ^of ^yummy ^sushi ^**(っ˘ڡ˘ς)** ^- ^worth {AMOUNT}'
    random1:
        value: "float( randint(0,1000) ) / 1000.0"
        for_fiat: true
        for_coin: true
        message: "{USER_FROM} ^asks ^randomness ^to ^decide ^luck ^of {USER_TO} ^and ^result ^is {AMOUNT}"
    random10:
        value: "float( randint(0,10000) ) / 1000.0"
        for_fiat: true
        for_coin: true
        message: "{USER_FROM} ^asks ^randomness ^to ^decide ^luck ^of {USER_TO} ^and ^result ^is {AMOUNT}"
    random25:
        value: "float( randint(0,25000) ) / 1000.0"
        for_fiat: true
        for_coin: true
        message: "{USER_FROM} ^asks ^randomness ^to ^decide ^luck ^of {USER_TO} ^and ^result ^is {AMOUNT}"
    random50:
        value: "float( randint(0,50000) ) / 1000.0"
        for_fiat: true
        for_coin: true
        message: "{USER_FROM} ^asks ^randomness ^to ^decide ^luck ^of {USER_TO} ^and ^result ^is {AMOUNT}"
    random100:
        value: "float( randint(0,100000) ) / 1000.0"
        for_fiat: true
        for_coin: true
        message: "{USER_FROM} ^asks ^randomness ^to ^decide ^luck ^of {USER_TO} ^and ^result ^is {AMOUNT}"
    random250:
        value: "float( randint(0,250000) ) / 1000.0"
        for_fiat: true
        for_coin: true
        message: "{USER_FROM} ^asks ^randomness ^to ^decide ^luck ^of {USER_TO} ^and ^result ^is {AMOUNT}"
    random500:
        value: "float( randint(0,500000) ) / 1000.0"
        for_fiat: true
        for_coin: true
        message: "{USER_FROM} ^asks ^randomness ^to ^decide ^luck ^of {USER_TO} ^and ^result ^is {AMOUNT}"
    random1000:
        value: "float( randint(0,1000000) ) / 1000.0"
        for_fiat: true
        for_coin: true
        message: "{USER_FROM} ^asks ^randomness ^to ^decide ^luck ^of {USER_TO} ^and ^result ^is {AMOUNT}"
    upvote:
        value: 0.1
        for_fiat: true
        for_coin: true
        message: '{USER_FROM} ^gives {USER_TO} ^an ^upvote... _^with ^benefits_ ^**ヽ(*・ω・)ﾉ** ^- ^worth {AMOUNT}'
    pi:
        value: 3.14159265
        for_fiat: true
        for_coin: true
    e:
        value: 2.7182818
        for_fiat: true
        for_coin: true
    leet:
        value: 1.337
        for_fiat: true
        for_coin: true
    quarter:
        value: 0.25
        for_fiat: true
        for_coin: true
    half:
        value: 0.5
        for_fiat: true
        for_coin: true
    cookie:
        value: 0.33
        for_fiat: true
        for_coin: false
        message: '{USER_FROM} ^gives {USER_TO} ^a ^yummy ^cookie ^**♪┏(・o･)┛♪** ^- ^worth {AMOUNT}'
    nothing:
        value: "float (self.ctb.conf.coins[self.coin].txmin.givetip if bool(self.coin) else 0.01)"
        for_fiat: true
        for_coin: true
        message: '^**(″･ิ_･ิ)っ** {USER_FROM} ^gives ^almost ^nothing ^to {USER_TO} ^- {AMOUNT}'
    gum:
        value: 1.5
        for_fiat: true
        for_coin: false
        message: '{USER_FROM} ^gives ^a ^pack ^of ^gum ^to {USER_TO} ^- ^worth {AMOUNT}'
    beer:
        value: 3.5
        for_fiat: true
        for_coin: false
        message: '{USER_FROM} ^gives ^a ^beer ^to {USER_TO} ^- ^worth {AMOUNT}'
    nicebeer:
        value: 5.0
        for_fiat: true
        for_coin: false
        message: '{USER_FROM} ^gives ^a ^nice ^beer ^**(〃･ิ‿･ิ)ゞ** ^to {USER_TO}  ^- ^worth {AMOUNT} ^**ƪ(˘▽˘ƪ)**'
    hug:
        value: 0.5
        for_fiat: true
        for_coin: true
        message: '^**(っ⌒‿⌒)っ** {USER_FROM} ^gives ^a ^nice ^hug ^**ヽ(*⌒∇⌒*)ﾉ** ^to {USER_TO} ^along ^with {AMOUNT}'
    kiss:
        value: 1.0
        for_fiat: true
        for_coin: true
        message: '{USER_TO} ^gets ^a ^kiss ^**(˘⌣˘)ε˘`)** ^from {USER_FROM} ^along ^with {AMOUNT}'
    nyan:
        value: 1.111111
        for_fiat: true
        for_coin: true
        message: '^**[^._.^]ﾉ彡** {USER_FROM} ^nyan ^nyan ^にゃん {USER_TO} ^にゃん ^にゃん {AMOUNT} ^**＼(＾O＾)／**'
